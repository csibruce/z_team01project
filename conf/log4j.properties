# 우선순위 로그 레벨 : DEBUG -> INFO -> WARN -> ERROR -> FATAL
# 루트로거 선언시 해당 로그 레벨 상위의 로그 출력(하위 로그 레벨은 출력 무시)
# 콘솔, 파일 대상 로깅
log4j.rootLogger=DEBUG, stdout, file

# 특정 팩키지 로그 레벨 선언
log4j.logger.com.ibatis=DEBUG
log4j.logger.kr.or.ddit=DEBUG


# SqlMap logging configuration...
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG

# appender 선언으로 콘솔 또는 콘솔 로그의 파일 대상 리다이렉트 처리
# Console output...
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n

# File output
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File =C:\\temp\\log\\log4jLog.log
log4j.appender.file.MaxFileSize=10MB
log4j.appender.file.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n